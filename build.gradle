/*
* Copyright 2012 the original author or authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply from: "gradle/vertxplugin.gradle"
apply from: "gradle/maven.gradle"

// We load some extra properties from vertx.properties
loadProperties("vertx.properties")

version = project.ext.version
group = groupname
archivesBaseName = artifact

vertx {
	version = "${project.vertxVersion}"
	junitVersion = "${project.junitVersion}"
	useTestframework = true
	langs = ['java', 'scala']
	testTimeout = 30
	showStandardStreams = true
}

def configurePom(def pom) {
  pom.project {
    description 'This module provides helper functions for the session manager module.'
    inceptionYear '2013'
    packaging 'zip'
    url 'https://github.com/campudus/vertx-session-manager-helper'

    developers {
      developer {
        id 'narigo'
        name 'Joern Bernhardt'
        email 'jb@campudus.com'
      }
    }

    scm {
      url 'https://github.com/campudus/vertx-session-manager-helper'
    }

    licenses {
      license {
        name 'The Apache Software License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        distribution 'repo'
      }
    }

    properties {
      setProperty('project.build.sourceEncoding', 'UTF8')
    }
  }
}

def loadProperties(String sourceFileName) {
  def config = new Properties()
  def propFile = new File(sourceFileName)
  if (propFile.canRead()) {
    config.load(new FileInputStream(propFile))
    for (Map.Entry property in config) {
      project.ext[property.key] = property.value;
    }
  }
}